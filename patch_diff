diff --git a/package-lock.json b/package-lock.json
index b8842a4..cdb84d8 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -26,7 +26,8 @@
         "@testing-library/react": "^8.0.7",
         "@testing-library/react-hooks": "^8.0.0",
         "babel-loader": "^8.0.5",
-        "node-sass": "^4.14.0"
+        "node-sass": "^4.14.0",
+        "react-test-renderer": "^16.9.0"
       }
     },
     "node_modules/@ampproject/remapping": {
@@ -21032,9 +21033,9 @@
       "dev": true
     },
     "node_modules/react-is": {
-      "version": "16.8.6",
-      "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.8.6.tgz",
-      "integrity": "sha512-aUk3bHfZ2bRSVFFbbeVS4i+lNPZr3/WM5jT2J5omUVV1zzcs1nAaf3l51ctA5FFvCRbhrH0bdAsRRQddFJZPtA=="
+      "version": "16.13.1",
+      "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
+      "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ=="
     },
     "node_modules/react-lifecycles-compat": {
       "version": "3.0.4",
@@ -21190,6 +21191,21 @@
         "react": ">= 0.14.0"
       }
     },
+    "node_modules/react-test-renderer": {
+      "version": "16.9.0",
+      "resolved": "https://registry.npmjs.org/react-test-renderer/-/react-test-renderer-16.9.0.tgz",
+      "integrity": "sha512-R62stB73qZyhrJo7wmCW9jgl/07ai+YzvouvCXIJLBkRlRqLx4j9RqcLEAfNfU3OxTGucqR2Whmn3/Aad6L3hQ==",
+      "dev": true,
+      "dependencies": {
+        "object-assign": "^4.1.1",
+        "prop-types": "^15.6.2",
+        "react-is": "^16.9.0",
+        "scheduler": "^0.15.0"
+      },
+      "peerDependencies": {
+        "react": "^16.0.0"
+      }
+    },
     "node_modules/react-textarea-autosize": {
       "version": "7.1.2",
       "resolved": "https://registry.npmjs.org/react-textarea-autosize/-/react-textarea-autosize-7.1.2.tgz",
@@ -42043,9 +42059,9 @@
       }
     },
     "react-is": {
-      "version": "16.8.6",
-      "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.8.6.tgz",
-      "integrity": "sha512-aUk3bHfZ2bRSVFFbbeVS4i+lNPZr3/WM5jT2J5omUVV1zzcs1nAaf3l51ctA5FFvCRbhrH0bdAsRRQddFJZPtA=="
+      "version": "16.13.1",
+      "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
+      "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ=="
     },
     "react-lifecycles-compat": {
       "version": "3.0.4",
@@ -42178,6 +42194,18 @@
         "refractor": "^2.4.1"
       }
     },
+    "react-test-renderer": {
+      "version": "16.9.0",
+      "resolved": "https://registry.npmjs.org/react-test-renderer/-/react-test-renderer-16.9.0.tgz",
+      "integrity": "sha512-R62stB73qZyhrJo7wmCW9jgl/07ai+YzvouvCXIJLBkRlRqLx4j9RqcLEAfNfU3OxTGucqR2Whmn3/Aad6L3hQ==",
+      "dev": true,
+      "requires": {
+        "object-assign": "^4.1.1",
+        "prop-types": "^15.6.2",
+        "react-is": "^16.9.0",
+        "scheduler": "^0.15.0"
+      }
+    },
     "react-textarea-autosize": {
       "version": "7.1.2",
       "resolved": "https://registry.npmjs.org/react-textarea-autosize/-/react-textarea-autosize-7.1.2.tgz",
diff --git a/package.json b/package.json
index fce4971..44db18f 100644
--- a/package.json
+++ b/package.json
@@ -41,7 +41,8 @@
     "@testing-library/react": "^8.0.7",
     "@testing-library/react-hooks": "^8.0.0",
     "babel-loader": "^8.0.5",
-    "node-sass": "^4.14.0"
+    "node-sass": "^4.14.0",
+    "react-test-renderer": "^16.9.0"
   },
   "jest": {
     "watchPathIgnorePatterns": [
diff --git a/src/hooks/__tests__/useVisualMode.test.js b/src/hooks/__tests__/useVisualMode.test.js
index fd21ce7..1229351 100644
--- a/src/hooks/__tests__/useVisualMode.test.js
+++ b/src/hooks/__tests__/useVisualMode.test.js
@@ -1,3 +1,35 @@
 import { renderHook, act } from "@testing-library/react-hooks";
 
-import useVisualMode from "hooks/useVisualMode";
\ No newline at end of file
+import useVisualMode from "hooks/useVisualMode";
+
+const FIRST = "FIRST";
+const SECOND = "SECOND";
+
+test("useVisualMode should initialize with default value", () => {
+  const { result } = renderHook(() => useVisualMode(FIRST));
+
+  expect(result.current.mode).toBe(FIRST);
+});
+
+test("useVisualMode should transition to another mode", () => {
+  // const { result } = renderHook(() => useVisualMode(FIRST));
+
+  // act(() => result.current.transition(SECOND));
+  // expect(result.current.mode).toBe(SECOND);
+});
+
+test("useVisualMode should return to previous mode", () => {
+  // const { result } = renderHook(() => useVisualMode(FIRST));
+
+  // act(() => result.current.transition(SECOND));
+  // expect(result.current.mode).toBe(SECOND);
+
+  // act(() => result.current.transition(THIRD));
+  // expect(result.current.mode).toBe(THIRD);
+
+  // act(() => result.current.back());
+  // expect(result.current.mode).toBe(SECOND);
+
+  // act(() => result.current.back());
+  // expect(result.current.mode).toBe(FIRST);
+});
\ No newline at end of file
diff --git a/src/hooks/useVisualMode.js b/src/hooks/useVisualMode.js
index e69de29..12b3524 100644
--- a/src/hooks/useVisualMode.js
+++ b/src/hooks/useVisualMode.js
@@ -0,0 +1,19 @@
+import { useState } from "react"
+
+export default function useVisualMode(initial) {
+  const [mode, setMode] = useState(initial);
+  const [history, setHistory] = useState([initial]);
+  
+  //create transition to update new Mode
+  function transition(newMode) {
+    setMode(newMode)
+  }
+
+  //create a back function to transition back to previous mode
+  function back() {
+    
+  }
+
+  return {mode, transition, back} 
+}
+
